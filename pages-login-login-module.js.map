{"version":3,"sources":["webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B5B,67BAA67B,sBAAsB,60BAA60B,sBAAsB,i5D;;;;;;;;;;;ACAtzD,kCAAkC,eAAe,oBAAoB,sBAAsB,qBAAqB,EAAE,iBAAiB,qBAAqB,EAAE,+CAA+C,mlB;;;;;;;;;;;;;;;;;;;;ACAvJ;AACiE;AAC1E;AAEM;AAU/C;IAIE,mBAAmB,MAAc,EAAS,WAAwB,EAAQ,OAAqB;QAA/F,iBAGC;QAHkB,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAQ,YAAO,GAAP,OAAO,CAAc;QAD/F,wBAAmB,GAAQ,EAAE,CAAC;QAM9B,eAAU,GAAG;YAEX,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACpC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC5C,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iBACtE,CAAC,CAAC;gBACH,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC/C,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC,CAAC;aAEJ,CAAC;QACJ,CAAC;QAED,0BAAqB,GAAG;YAEtB,KAAI,CAAC,mBAAmB,GAAG;gBACzB,OAAO,EAAE;oBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;oBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,EAAE;iBAC5D;gBACD,UAAU,EAAE;oBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;oBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;oBAC9E,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,+DAA+D,EAAE;iBAChG;aACF,CAAC;QACJ,CAAC;QAED,UAAK,GAAG,UAAC,IAAI;YACX,cAAc;YACd,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACpB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QAOD,qBAAgB,GAAG;YACjB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC7C,CAAC;QAED,sBAAiB,GAAG;YAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC;QAED,2BAAsB,GAAG;YACvB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;QAxDC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAuCD,4BAAQ,GAAR;IAGA,CAAC;IAjDU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,+FAAgC;;SAEjC,CAAC;+EAK2B,sDAAM,EAAsB,0DAAW,EAAgB,4DAAa;OAJpF,SAAS,CA+DrB;IAAD,gBAAC;CAAA;AA/DqB","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>login</ion-title>   \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content color=\\\"secondary\\\" padding>\\r\\n    <form class=\\\"form\\\" [formGroup]=\\\"angForm\\\">\\r\\n      <ion-grid>\\r\\n        <ion-row color=\\\"primary\\\" justify-content-center>\\r\\n          <ion-col >           \\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" >Email</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" #email ></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"angForm.get('email').hasError(validation.type) && (angForm.get('email').dirty || angForm.get('email').touched)\\\">\\r\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>           \\r\\n          </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n          <ion-col >                \\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\" >Password</ion-label>\\r\\n              <ion-input type=\\\"text\\\" formControlName=\\\"password\\\" #password ></ion-input>\\r\\n            </ion-item>\\r\\n                <div class=\\\"validation-errors\\\">\\r\\n                    <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n                      <div class=\\\"error-message\\\" *ngIf=\\\"angForm.get('password').hasError(validation.type) && (angForm.get('password').dirty || angForm.get('password').touched)\\\">\\r\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n                      </div>\\r\\n                    </ng-container>\\r\\n                  </div>  \\r\\n            </ion-col>\\r\\n        </ion-row> \\r\\n      </ion-grid>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col col-9></ion-col>\\r\\n        <ion-col><p class=\\\"go-to-login\\\"><a (click)=\\\"goToForgotPasswordPage()\\\">Forgot Password</a></p></ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button button color=\\\"dark\\\" (click)=\\\"login(angForm.value)\\\" expand=\\\"block\\\"  [disabled]=\\\"!angForm.valid\\\" fill=\\\"outline\\\">\\r\\n            LOGIN\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col col-5>\\r\\n          <ion-button color=\\\"dark\\\" fill=\\\"outline\\\">\\r\\n            Facebook\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <ion-col col-2>\\r\\n        </ion-col>\\r\\n        <ion-col col-5>\\r\\n          <ion-button color=\\\"danger\\\" fill=\\\"outline\\\">\\r\\n            Google\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>     \\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button button color=\\\"dark\\\" class=\\\"submit-btn\\\" (click)=\\\"goToRegisterPage()\\\" expand=\\\"block\\\" fill=\\\"outline\\\">\\r\\n            Create an account\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </form>\\r\\n  </ion-content>\\r\\n  <ion-footer class=\\\"login-footer\\\" >\\r\\n    <ion-toolbar color=\\\"dark\\\">\\r\\n      <ion-title> <a href=\\\"javascript:void(0)\\\"><span class=\\\"rightHelp\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></span></a></ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-footer>\\r\\n\"","module.exports = \".error-message {\\n  color: red;\\n  font-size: 14px;\\n  margin-left: 10px;\\n  margin-top: 10px; }\\n\\n.submit-btn {\\n  margin-top: 40px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vRDpcXFJfTl9EXFxQYXkta2FydC9zcmNcXGFwcFxccGFnZXNcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxVQUFVO0VBQ1YsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlXHJcbntcclxuICBjb2xvcjogcmVkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uc3VibWl0LWJ0biB7XHJcbiAgbWFyZ2luLXRvcDogNDBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormControl, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RegistrationPage } from '../registration/registration.page';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n  validation_messages: any = {};\r\n  constructor(public router: Router, public formBuilder: FormBuilder,public navCtrl:NavController) {\r\n    this.createForm();\r\n    this.setValidationMessages();\r\n  }\r\n\r\n  createForm = () => {\r\n\r\n    this.angForm = this.formBuilder.group({\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.maxLength(10)\r\n      ]))\r\n\r\n    })\r\n  }\r\n\r\n  setValidationMessages = () => {\r\n\r\n    this.validation_messages = {\r\n      'email': [\r\n        { type: 'required', message: 'Email is required.' },\r\n        { type: 'pattern', message: 'Please enter a valid email.' }\r\n      ],\r\n      'password': [\r\n        { type: 'required', message: 'Password is required.' },\r\n        { type: 'minlength', message: 'Password must be at least 5 characters long.' },\r\n        { type: 'maxlength', message: 'Password must be at less than or equal to 10 characters long.' }\r\n      ],\r\n    };\r\n  }\r\n\r\n  login = (form) => {\r\n    //alert(form);\r\n    console.table(form);\r\n    this.goToDashboradPage();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n  goToRegisterPage = () => {\r\n    this.router.navigateByUrl('/registration');\r\n  }\r\n\r\n  goToDashboradPage = () => {\r\n    this.router.navigateByUrl('/dashboard');\r\n  }\r\n\r\n  goToForgotPasswordPage = () => {\r\n    this.router.navigateByUrl('/forgot');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}